openapi: 3.0.0
info:
  title: Disaster Awareness API
  description: API for managing disaster awareness content and emergency kits
  version: 1.0.0
  contact:
    name: Disaster Awareness Team
    url: https://disasterawareness.com
    email: contact@disasterawareness.com

servers:
  - url: http://localhost:8080/disaster-awareness
    description: Local development server

paths:
  /api/login:
    post:
      summary: User login
      description: Authenticates a user with email and password
      operationId: login
      tags:
        - Authentication
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Login realizado com sucesso
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Invalid credentials
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/register:
    post:
      summary: Register a new user
      operationId: registerUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - name
                - email
                - password
              properties:
                name:
                  type: string
                  description: User's full name
                email:
                  type: string
                  format: email
                  description: User's email address
                password:
                  type: string
                  format: password
                  description: User's password
      responses:
        '201':
          description: User registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User registered successfully
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/kit:
    get:
      summary: Get all kits
      description: Retrieve all emergency kits
      operationId: getAllKits
      tags:
        - Kits
      responses:
        '200':
          description: List of kits
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Kit'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create new kit
      description: Create a new emergency kit
      operationId: createKit
      tags:
        - Kits
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - houseType
                - numResidents
                - hasChildren
                - hasElderly
                - hasPets
                - region
              properties:
                houseType:
                  type: string
                  description: Type of house (APARTMENT, HOUSE, CONDO)
                numResidents:
                  type: integer
                  description: Number of residents
                hasChildren:
                  type: boolean
                  description: Whether there are children in the household
                hasElderly:
                  type: boolean
                  description: Whether there are elderly people in the household
                hasPets:
                  type: boolean
                  description: Whether there are pets in the household
                region:
                  type: string
                  description: Region of the household
      responses:
        '201':
          description: Kit created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Kit criado com sucesso
                  kit:
                    $ref: '#/components/schemas/Kit'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/kit/{id}:
    get:
      summary: Get kit by ID
      description: Retrieve a specific emergency kit by ID
      operationId: getKitById
      tags:
        - Kits
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Kit details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Kit'
        '404':
          description: Kit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    put:
      summary: Update kit
      description: Update an existing emergency kit
      operationId: updateKit
      tags:
        - Kits
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
        - name: houseType
          in: query
          required: true
          schema:
            type: string
        - name: numResidents
          in: query
          required: true
          schema:
            type: integer
        - name: hasChildren
          in: query
          required: true
          schema:
            type: boolean
        - name: hasElderly
          in: query
          required: true
          schema:
            type: boolean
        - name: hasPets
          in: query
          required: true
          schema:
            type: boolean
        - name: region
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Kit updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KitSuccessResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '404':
          description: Kit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    delete:
      summary: Delete kit
      description: Delete an emergency kit
      operationId: deleteKit
      tags:
        - Kits
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Kit deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
        '404':
          description: Kit not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /api/content:
    get:
      summary: Get all content
      description: Retrieve all disaster awareness content
      operationId: getAllContent
      tags:
        - Content
      responses:
        '200':
          description: List of content
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Content'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
    post:
      summary: Create new content
      description: Create new disaster awareness content
      operationId: createContent
      tags:
        - Content
      parameters:
        - name: disasterType
          in: query
          required: true
          schema:
            type: string
        - name: title
          in: query
          required: true
          schema:
            type: string
        - name: description
          in: query
          required: true
          schema:
            type: string
        - name: videoUrl
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: Content created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentSuccessResponse'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  schemas:
    User:
      type: object
      properties:
        userId:
          type: integer
        name:
          type: string
        email:
          type: string

    Kit:
      type: object
      properties:
        kitId:
          type: integer
        houseType:
          type: string
        residents:
          type: integer
        hasChildren:
          type: boolean
        hasElderly:
          type: boolean
        hasPets:
          type: boolean
        region:
          type: string

    Content:
      type: object
      properties:
        contentId:
          type: integer
        disasterType:
          type: string
        title:
          type: string
        description:
          type: string
        videoUrl:
          type: string

    LoginSuccessResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: '#/components/schemas/User'

    RegisterSuccessResponse:
      type: object
      properties:
        message:
          type: string
        user:
          $ref: '#/components/schemas/User'

    KitSuccessResponse:
      type: object
      properties:
        message:
          type: string
        kit:
          $ref: '#/components/schemas/Kit'

    ContentSuccessResponse:
      type: object
      properties:
        message:
          type: string
        content:
          $ref: '#/components/schemas/Content'

    SuccessResponse:
      type: object
      properties:
        message:
          type: string

    ErrorResponse:
      type: object
      properties:
        error:
          type: string 